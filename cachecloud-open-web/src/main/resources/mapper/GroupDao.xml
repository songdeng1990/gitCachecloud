<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sohu.cache.dao.GroupDao">

    <sql id="group_minute_statistics_columns">
        business_group_id,collect_time,hits,misses,command_count,used_memory,
        expired_keys,evicted_keys,net_input_byte,net_output_byte,
        connected_clients,object_size,modify_time,accumulation
    </sql>

    <sql id="group_minute_command_statistics_columns">
        business_group_id,collect_time,command_name,command_count,modify_time
    </sql>

    <sql id="app_desc_fields">
        app_id,name,business_group_id,user_id,status,intro,create_time,passed_time,type,officer,
        ver_id,is_test,has_back_store,need_persistence,need_hot_back_up,forecase_qps,
        forecast_obj_num,mem_alert_value,client_machine_room,app_key,client_conn_alert_value, template_id
    </sql>

    <sql id="select_stat_table">
        <choose>
            <when test="td.dimensionality ==0"> group_minute_statistics </when>
            <otherwise> group_hour_statistics </otherwise>
        </choose>
    </sql>

    <sql id="select_table">
        <choose>
            <when test="td.dimensionality ==0"> group_minute_command_statistics </when>
            <otherwise> group_hour_command_statistics </otherwise>
        </choose>
    </sql>

    <select id="getAppDescByGroupId" resultType="AppDesc" parameterType="long">
        select <include refid="app_desc_fields"/>
        from app_desc where business_group_id=#{groupId}
    </select>

    <insert id="mergeMinuteGroupStats" parameterType="GroupStats">
        insert into group_minute_statistics
        (<include refid="group_minute_statistics_columns"/>)
        values
        (#{businessGroupId},#{collectTime},#{hits},#{misses},${commandCount},#{usedMemory},
        #{expiredKeys},#{evictedKeys},#{netInputByte},#{netOutputByte},
        #{connectedClients},#{objectSize},#{modifyTime},1)
        on duplicate key update
        hits = hits + #{hits},
        misses = misses + #{misses},
        command_count = command_count + #{commandCount},
        used_memory = used_memory + #{usedMemory},
        expired_keys = expired_keys + #{expiredKeys},
        evicted_keys = evicted_keys + #{evictedKeys},
        net_input_byte = net_input_byte + #{netInputByte},
        net_output_byte = net_output_byte + #{netOutputByte},
        connected_clients = connected_clients + #{connectedClients},
        object_size = object_size + #{objectSize},
        modify_time = #{modifyTime},
        accumulation = accumulation + 1
    </insert>

    <insert id="mergeHourGroupStats" parameterType="GroupStats">
        insert into group_hour_statistics
        (<include refid="group_minute_statistics_columns"/>)
        values
        (#{businessGroupId},substring(#{collectTime}, 1, 10),#{hits},#{misses},${commandCount},#{usedMemory},#{expiredKeys},
        #{evictedKeys},#{netInputByte},#{netOutputByte},#{connectedClients},#{objectSize},#{modifyTime},1)
        on duplicate key update
        hits = hits + #{hits},
        misses = misses + #{misses},
        command_count = command_count + #{commandCount},
        used_memory = used_memory + #{usedMemory},
        expired_keys = expired_keys + #{expiredKeys},
        evicted_keys = evicted_keys + #{evictedKeys},
        net_input_byte = net_input_byte + #{netInputByte},
        net_output_byte = net_output_byte + #{netOutputByte},
        connected_clients = connected_clients + #{connectedClients},
        object_size = object_size + #{objectSize},
        modify_time = #{modifyTime},
        accumulation = accumulation + 1
    </insert>

    <select id="getGroupStatsByMinute" resultType="GroupStats">
        select
        <include refid="group_minute_statistics_columns"/> , create_time
        from group_minute_statistics
        where
        business_group_id = #{businessGroupId} and collect_time between #{beginTime} and #{endTime}
    </select>

    <select id="getGroupStatsByHour" resultType="GroupStats">
        select
        <include refid="group_minute_statistics_columns"/> , create_time
        from group_hour_statistics
        where
        business_group_id = #{businessGroupId} and collect_time between #{beginTime} and #{endTime}
    </select>

    <select id="getGroupStatsList" resultType="GroupStats">
        select
        <include refid="group_minute_statistics_columns"/> , create_time
        from <include refid="select_stat_table"/>
        where
        business_group_id = #{businessGroupId} and collect_time between #{td.begin} and #{td.end}
    </select>

    <insert id="mergeMinuteCommandStatus" parameterType="GroupCommandStats">
        insert into group_minute_command_statistics
        (<include refid="group_minute_command_statistics_columns" />)
        values
        (#{businessGroupId},#{collectTime},#{commandName},#{commandCount},#{modifyTime})
        on duplicate key update
        command_count = command_count + #{commandCount},
        modify_time = #{modifyTime}
    </insert>

    <insert id="mergeHourCommandStatus" parameterType="GroupCommandStats">
        insert into group_hour_command_statistics
        (<include refid="group_minute_command_statistics_columns" />)
        values
        (#{businessGroupId},substring(#{collectTime}, 1, 10),#{commandName},#{commandCount},#{modifyTime})
        on duplicate key update
        command_count = command_count + #{commandCount},
        modify_time = #{modifyTime}
    </insert>

    <select id="getGroupAllCommandStatsListByMinute" resultType="GroupCommandStats">
        select
        business_group_id,
        collect_time,
        'commands' command_name,
        command_count,
        create_time,
        modify_time
        from group_minute_statistics
        where
        business_group_id = #{businessGroupId}
        and collect_time between #{beginTime} and #{endTime}
    </select>

    <select id="getGroupAllCommandStatsListByHour" resultType="GroupCommandStats">
        select
        business_group_id,
        collect_time,
        'commands' command_name,
        command_count,
        create_time,
        modify_time
        from group_hour_statistics
        where
        business_group_id = #{businessGroupId}
        and collect_time between #{beginTime} and #{endTime}
    </select>

    <select id="getGroupCommandStatsListByMinuteWithCommand" resultType="GroupCommandStats">
        select
        <include refid="group_minute_command_statistics_columns"/> , create_time
        from group_minute_command_statistics
        where
        business_group_id = #{businessGroupId}
        and command_name = #{commandName}
        and collect_time between #{beginTime} and #{endTime}
    </select>


    <select id="getGroupCommandStatsListByHourWithCommand" resultType="GroupCommandStats">
        select
        <include refid="group_minute_command_statistics_columns"/> , create_time
        from group_hour_command_statistics
        where
        business_group_id = #{businessGroupId}
        and command_name = #{commandName}
        and collect_time between #{beginTime} and #{endTime}
    </select>


    <select id="getGroupCommandStatsList" resultType="GroupCommandStats">
        select
        <include refid="group_minute_command_statistics_columns"/> , create_time
        from <include refid="select_table"/>
        where
        business_group_id = #{businessGroupId}
        and command_name = #{commandName}
        and collect_time between #{td.begin} and #{td.end}
    </select>

    <!--查询一天中应用的命令执行次数的top-->
    <select id="getTopGroupCommandStatsList" resultType="GroupCommandStats">
        select
        business_group_id, command_name , max(collect_time) collect_time, sum(command_count) command_count ,
        max(modify_time) modify_time, max(create_time) create_time
        from <include refid="select_table"/>
        where business_group_id = #{businessGroupId}
        and collect_time between #{td.begin} and #{td.end}
        group by business_group_id,command_name
        order by command_count desc , modify_time desc
        limit #{top};
    </select>

    <select id="getCommandClimax" resultType="GroupCommandStats">
        select t2.*
        from (select business_group_id, command_name, max(command_count) command_count
        from
        <include refid="select_table"/>
        where
        business_group_id = #{businessGroupId}
        and command_name = #{commandName}
        and collect_time between #{td.begin} and #{td.end}
        group by business_group_id,command_name) t1 , <include refid="select_table"/> t2
        where t1.business_group_id = t2.business_group_id
        and t1.command_name=t2.command_name
        and t1.command_count=t2.command_count
        and t2.collect_time between #{td.begin} and #{td.end}
        limit 1;
    </select>

    <select id="getTopGroupCommandGroupSum" resultType="GroupCommandStats">
        select
        business_group_id,collect_time,command_name,sum(command_count) as command_count,modify_time, create_time
        from <include refid="select_table"/>
        where business_group_id = #{businessGroupId}
        and collect_time between #{td.begin} and #{td.end}
        group by command_name
        order by sum(command_count) desc
        limit #{top};
    </select>
</mapper>


